@page "/prerendered-counter-1"
@* @rendermode @(new InteractiveAutoRenderMode(prerender: false)) *@
@inject ILogger<PrerenderedCounter1> Logger
@implements IDisposable
@inject PersistentComponentState ApplicationState

<PageTitle>Prerendered Counter 1</PageTitle>

<h1>Prerendered Counter 1</h1>

<p>组件正在执行的位置：@RendererInfo.Name</p>
<p>组件在呈现时是否支持交互：@RendererInfo.IsInteractive</p>
<p>组件的已分配呈现模式：@(AssignedRenderMode?.ToString() ?? "静态服务器渲染")</p>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount;
    private PersistingComponentStateSubscription persistingSubscription;

    protected override void OnInitialized()
    {
        persistingSubscription =
           ApplicationState.RegisterOnPersisting(PersistCount);

        if (!ApplicationState.TryTakeFromJson<int>(
             nameof(currentCount), out var restoredCount))
        {
            currentCount = Random.Shared.Next(100);
            Logger.LogInformation("currentCount set to {Count}", currentCount);
        }
        else
        {
            currentCount = restoredCount!;
            Logger.LogInformation("currentCount restored to {Count}", currentCount);
        }
    }

    private Task PersistCount()
    {
        ApplicationState.PersistAsJson(nameof(currentCount), currentCount);

        return Task.CompletedTask;
    }

    void IDisposable.Dispose() => persistingSubscription.Dispose();

    private void IncrementCount() => currentCount++;
}